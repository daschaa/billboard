name: Xcode - Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build using xcodebuild command
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node 17
      uses: actions/setup-node@v2
      with:
        node-version: '17'
    - name: Build
      run: |
        npm i
        cd macos
        pod install
        xcodebuild -workspace billboard.xcworkspace -scheme billboard-macOS ARCHS='x86_64' ONLY_ACTIVE_ARCH=NO DSTROOT="release" archive
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: billboard-artifact
        path: ./macos/release/Applications/billboard.app
  create-prod-release:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - uses: actions/checkout@v2
    - name: Download Archive Artifact iOS
      uses: actions/download-artifact@v2
      with:
        name: billboard-artifact
    - name: Get Release Name
      id: set_release_name
      run: |
        content=`cat ./package.json`
        # the following lines are only required for multi line json
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        # end of optional handling for multi line json
        echo "::set-output name=packageJson::$content"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ fromJson(steps.set_release_name.outputs.packageJson).version }}
        release_name: Release ${{ fromJson(steps.set_release_name.outputs.packageJson).version }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./billboard.app
        asset_name: billboard.app
        asset_content_type: application/octet-stream
